name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Run unit tests
      run: npm test
    
    - name: Build
      run: npm run build
      env:
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_SECURE: ${{ secrets.SMTP_SECURE }}
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}
        SMTP_FROM: ${{ secrets.SMTP_FROM }}
        MODEL_GENERATION_API_URL: ${{ secrets.MODEL_GENERATION_API_URL }}
        MODEL_GENERATION_API_KEY: ${{ secrets.MODEL_GENERATION_API_KEY }}
        STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
        STORAGE_REGION: ${{ secrets.STORAGE_REGION }}
        STORAGE_ACCESS_KEY: ${{ secrets.STORAGE_ACCESS_KEY }}
        STORAGE_SECRET_KEY: ${{ secrets.STORAGE_SECRET_KEY }}
    
    - name: Run end-to-end tests
      run: npm run e2e
      env:
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_SECURE: ${{ secrets.SMTP_SECURE }}
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}
        SMTP_FROM: ${{ secrets.SMTP_FROM }}
        MODEL_GENERATION_API_URL: ${{ secrets.MODEL_GENERATION_API_URL }}
        MODEL_GENERATION_API_KEY: ${{ secrets.MODEL_GENERATION_API_KEY }}
        STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
        STORAGE_REGION: ${{ secrets.STORAGE_REGION }}
        STORAGE_ACCESS_KEY: ${{ secrets.STORAGE_ACCESS_KEY }}
        STORAGE_SECRET_KEY: ${{ secrets.STORAGE_SECRET_KEY }}
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
      env:
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_SECURE: ${{ secrets.SMTP_SECURE }}
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}
        SMTP_FROM: ${{ secrets.SMTP_FROM }}
        MODEL_GENERATION_API_URL: ${{ secrets.MODEL_GENERATION_API_URL }}
        MODEL_GENERATION_API_KEY: ${{ secrets.MODEL_GENERATION_API_KEY }}
        STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
        STORAGE_REGION: ${{ secrets.STORAGE_REGION }}
        STORAGE_ACCESS_KEY: ${{ secrets.STORAGE_ACCESS_KEY }}
        STORAGE_SECRET_KEY: ${{ secrets.STORAGE_SECRET_KEY }}
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod' 